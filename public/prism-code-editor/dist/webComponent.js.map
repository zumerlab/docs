{"version":3,"file":"webComponent.js","sources":["../src/webComponent.ts"],"sourcesContent":["/** @module web-component */\r\n\r\nimport { PrismEditor } from \"./types.js\"\r\nimport {\r\n\tSetupOptions,\r\n\tbasicEditor,\r\n\tfullEditor,\r\n\tminimalEditor,\r\n\treadonlyEditor,\r\n\tupdateTheme,\r\n} from \"./setups/index.js\"\r\n\r\nconst attributeMap = {\r\n\tlanguage: [(value: string | null) => value || \"text\"],\r\n\t\"tab-size\": [(value: string | null) => +value! || 2, \"tabSize\"],\r\n\t\"insert-spaces\": [(value: string | null) => value != null, \"insertSpaces\"],\r\n\t\"line-numbers\": [(value: string | null) => value != null, \"lineNumbers\"],\r\n\treadonly: [(value: string | null) => value != null, \"readOnly\"],\r\n\t\"word-wrap\": [(value: string | null) => value != null, \"wordWrap\"],\r\n\trtl: [(value: string | null) => value != null],\r\n\ttheme: [(value: string | null) => value || \"vs-code-dark\"],\r\n} as const\r\n\r\nconst attributes = Object.keys(attributeMap)\r\n\r\nconst getOptions = (el: HTMLElement) => {\r\n\tconst options = <Required<SetupOptions>>{}\r\n\tfor (let key in attributeMap) // @ts-expect-error\r\n\t\toptions[attributeMap[key][1] || key] = attributeMap[key][0](el.getAttribute(key))\r\n\r\n\toptions.value = el.textContent!\r\n\tel.textContent = \"\"\r\n\treturn options\r\n}\r\n\r\nconst addComponent = (name: string, createEditor: typeof basicEditor) => {\r\n\tcustomElements.define(\r\n\t\tname,\r\n\t\tclass extends HTMLElement {\r\n\t\t\tstatic observedAttributes = attributes\r\n\t\t\tstatic formAssociated = true\r\n\r\n\t\t\teditor: PrismEditor\r\n\r\n\t\t\tconstructor() {\r\n\t\t\t\tsuper()\r\n\t\t\t\tconst internals = this.attachInternals?.()\r\n\t\t\t\tthis.editor = createEditor(this, getOptions(this), () =>\r\n\t\t\t\t\tthis.dispatchEvent(new CustomEvent(\"ready\")),\r\n\t\t\t\t)\r\n\t\t\t\tif (internals) {\r\n\t\t\t\t\tthis.editor.addListener(\"update\", internals.setFormValue.bind(internals))\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const attr in attributeMap)\r\n\t\t\t\t\tObject.defineProperty(this, attributeMap[<keyof typeof attributeMap>attr][1] || attr, {\r\n\t\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\t\tget: () => attributeMap[<keyof typeof attributeMap>attr][0](this.getAttribute(attr)),\r\n\t\t\t\t\t\tset: /language|theme|tab-size/.test(attr)\r\n\t\t\t\t\t\t\t? (val: string) => this.setAttribute(attr, val)\r\n\t\t\t\t\t\t\t: (val: boolean) => this.toggleAttribute(attr, val),\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\r\n\t\t\tget value() {\r\n\t\t\t\treturn this.editor.value\r\n\t\t\t}\r\n\t\t\tset value(value: string) {\r\n\t\t\t\tthis.editor.setOptions({ value })\r\n\t\t\t}\r\n\r\n\t\t\tformResetCallback() {\r\n\t\t\t\tthis.value = this.editor.options.value\r\n\t\t\t}\r\n\r\n\t\t\tattributeChangedCallback(\r\n\t\t\t\tname: keyof typeof attributeMap,\r\n\t\t\t\toldValue: string | null,\r\n\t\t\t\tnewValue: string | null,\r\n\t\t\t) {\r\n\t\t\t\tconst [fn, propName] = attributeMap[name]\r\n\t\t\t\tconst newVal = fn(newValue)\r\n\t\t\t\tif (fn(oldValue) != newVal) {\r\n\t\t\t\t\tif (name == \"theme\") updateTheme(this.editor, <string>newVal)\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tthis.editor.setOptions({\r\n\t\t\t\t\t\t\t[propName || name]: newVal,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t)\r\n}\r\n\r\nexport interface PrismEditorElement extends HTMLElement {\r\n\treadonly editor: PrismEditor\r\n\tvalue: string\r\n\ttheme: string\r\n\tlanguage: string\r\n\ttabSize: number\r\n\tinsertSpaces: boolean\r\n\tlineNumbers: boolean\r\n\treadOnly: boolean\r\n\twordWrap: boolean\r\n\trtl: boolean\r\n\r\n\taddEventListener(\r\n\t\ttype: \"ready\",\r\n\t\tlistener: (this: PrismEditorElement, ev: CustomEvent) => any,\r\n\t\toptions?: boolean | AddEventListenerOptions,\r\n\t): void\r\n\taddEventListener<K extends keyof HTMLElementEventMap>(\r\n\t\ttype: K,\r\n\t\tlistener: (this: PrismEditorElement, ev: HTMLElementEventMap[K]) => any,\r\n\t\toptions?: boolean | AddEventListenerOptions,\r\n\t): void\r\n\taddEventListener(\r\n\t\ttype: string,\r\n\t\tlistener: EventListenerOrEventListenerObject,\r\n\t\toptions?: boolean | AddEventListenerOptions,\r\n\t): void\r\n\r\n\tremoveEventListener(\r\n\t\ttype: \"ready\",\r\n\t\tlistener: (this: PrismEditorElement, ev: CustomEvent) => any,\r\n\t\toptions?: boolean | EventListenerOptions,\r\n\t): void\r\n\tremoveEventListener<K extends keyof HTMLElementEventMap>(\r\n\t\ttype: K,\r\n\t\tlistener: (this: PrismEditorElement, ev: HTMLElementEventMap[K]) => any,\r\n\t\toptions?: boolean | EventListenerOptions,\r\n\t): void\r\n\tremoveEventListener(\r\n\t\ttype: string,\r\n\t\tlistener: EventListenerOrEventListenerObject,\r\n\t\toptions?: boolean | EventListenerOptions,\r\n\t): void\r\n}\r\n\r\n/**\r\n * Adds a custom element wrapping the {@link minimalEditor} setup.\r\n * @param name Name of the custom element. Must be a valid custom element name.\r\n */\r\nexport const addMinimalEditor = (name: string) => addComponent(name, minimalEditor)\r\n/**\r\n * Adds a custom element wrapping the {@link basicEditor} setup.\r\n * @param name Name of the custom element. Must be a valid custom element name.\r\n */\r\nexport const addBasicEditor = (name: string) => addComponent(name, basicEditor)\r\n/**\r\n * Adds a custom element wrapping the {@link fullEditor} setup.\r\n * @param name Name of the custom element. Must be a valid custom element name.\r\n * @deprecated Will get merged with {@link addBasicEditor} in the next major release.\r\n */\r\nexport const addFullEditor = (name: string) => addComponent(name, fullEditor)\r\n/**\r\n * Adds a custom element wrapping the {@link readonlyEditor} setup.\r\n * @param name Name of the custom element. Must be a valid custom element name.\r\n */\r\nexport const addReadonlyEditor = (name: string) => addComponent(name, readonlyEditor)\r\n"],"names":["name"],"mappings":";;;;;;;AAYA,MAAM,eAAe;AAAA,EACpB,UAAU,CAAC,CAAC,UAAyB,SAAS,MAAM;AAAA,EACpD,YAAY,CAAC,CAAC,UAAyB,CAAC,SAAU,GAAG,SAAS;AAAA,EAC9D,iBAAiB,CAAC,CAAC,UAAyB,SAAS,MAAM,cAAc;AAAA,EACzE,gBAAgB,CAAC,CAAC,UAAyB,SAAS,MAAM,aAAa;AAAA,EACvE,UAAU,CAAC,CAAC,UAAyB,SAAS,MAAM,UAAU;AAAA,EAC9D,aAAa,CAAC,CAAC,UAAyB,SAAS,MAAM,UAAU;AAAA,EACjE,KAAK,CAAC,CAAC,UAAyB,SAAS,IAAI;AAAA,EAC7C,OAAO,CAAC,CAAC,UAAyB,SAAS,cAAc;AAC1D;AAEA,MAAM,aAAa,OAAO,KAAK,YAAY;AAE3C,MAAM,aAAa,CAAC,OAAoB;AACvC,QAAM,UAAkC,CAAA;AACxC,WAAS,OAAO;AACf,YAAQ,aAAa,GAAG,EAAE,CAAC,KAAK,GAAG,IAAI,aAAa,GAAG,EAAE,CAAC,EAAE,GAAG,aAAa,GAAG,CAAC;AAEjF,UAAQ,QAAQ,GAAG;AACnB,KAAG,cAAc;AACV,SAAA;AACR;AAEA,MAAM,eAAe,CAAC,MAAc,iBAAqC;;AACzD,iBAAA;AAAA,IACd;AAAA,KACA,mBAAc,YAAY;AAAA,MAMzB,cAAc;AACP;AAHP;AAIO,cAAA,YAAY,KAAK;AACvB,aAAK,SAAS;AAAA,UAAa;AAAA,UAAM,WAAW,IAAI;AAAA,UAAG,MAClD,KAAK,cAAc,IAAI,YAAY,OAAO,CAAC;AAAA,QAAA;AAE5C,YAAI,WAAW;AACd,eAAK,OAAO,YAAY,UAAU,UAAU,aAAa,KAAK,SAAS,CAAC;AAAA,QACzE;AAEA,mBAAW,QAAQ;AAClB,iBAAO,eAAe,MAAM,aAAwC,IAAI,EAAE,CAAC,KAAK,MAAM;AAAA,YACrF,YAAY;AAAA,YACZ,KAAK,MAAM,aAAwC,IAAI,EAAE,CAAC,EAAE,KAAK,aAAa,IAAI,CAAC;AAAA,YACnF,KAAK,0BAA0B,KAAK,IAAI,IACrC,CAAC,QAAgB,KAAK,aAAa,MAAM,GAAG,IAC5C,CAAC,QAAiB,KAAK,gBAAgB,MAAM,GAAG;AAAA,UAAA,CACnD;AAAA,MACH;AAAA,MAEA,IAAI,QAAQ;AACX,eAAO,KAAK,OAAO;AAAA,MACpB;AAAA,MACA,IAAI,MAAM,OAAe;AACxB,aAAK,OAAO,WAAW,EAAE,MAAO,CAAA;AAAA,MACjC;AAAA,MAEA,oBAAoB;AACd,aAAA,QAAQ,KAAK,OAAO,QAAQ;AAAA,MAClC;AAAA,MAEA,yBACCA,OACA,UACA,UACC;AACD,cAAM,CAAC,IAAI,QAAQ,IAAI,aAAaA,KAAI;AAClC,cAAA,SAAS,GAAG,QAAQ;AACtB,YAAA,GAAG,QAAQ,KAAK,QAAQ;AAC3B,cAAIA,SAAQ;AAAqB,wBAAA,KAAK,QAAgB,MAAM;AAAA;AAE3D,iBAAK,OAAO,WAAW;AAAA,cACtB,CAAC,YAAYA,KAAI,GAAG;AAAA,YAAA,CACpB;AAAA,QACH;AAAA,MACD;AAAA,IACD,GAnDC,cADD,IACQ,sBAAqB,aAC5B,cAFD,IAEQ,kBAAiB,OAFzB;AAAA,EAoDA;AAEF;AAmDO,MAAM,mBAAmB,CAAC,SAAiB,aAAa,MAAM,aAAa;AAK3E,MAAM,iBAAiB,CAAC,SAAiB,aAAa,MAAM,WAAW;AAMvE,MAAM,gBAAgB,CAAC,SAAiB,aAAa,MAAM,UAAU;AAKrE,MAAM,oBAAoB,CAAC,SAAiB,aAAa,MAAM,cAAc;"}