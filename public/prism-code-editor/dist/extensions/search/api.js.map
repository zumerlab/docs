{"version":3,"file":"api.js","sources":["../../../src/extensions/search/replace.ts"],"sourcesContent":["import { PrismEditor } from \"../../index.js\"\r\nimport { insertText } from \"../../utils/index.js\"\r\nimport { scrollToEl } from \"../../utils/local.js\"\r\nimport { SearchAPI, createSearchAPI } from \"./search.js\"\r\nimport { addTextareaListener } from \"../../core.js\"\r\n\r\n/**\r\n * Object with methods useful for performing a search\r\n * and both highlighting and replacing the matches.\r\n */\r\nexport interface ReplaceAPI extends SearchAPI {\r\n\t/** Index of the match ahead of the cursor. */\r\n\tnext(): number\r\n\t/** Index of the match behind the cursor. */\r\n\tprev(): number\r\n\t/** Index of the closest match. */\r\n\tclosest(): number\r\n\t/**\r\n\t * Selects the match with the passed index and scrolls\r\n\t * it into view with the specified scroll padding.\r\n\t */\r\n\tselectMatch(index: number, scrollPadding?: number): void\r\n\t/**\r\n\t * If a match is selected and it's different to the provided string, it's replaced,\r\n\t * else the index of the closest match is returned.\r\n\t * If there's no selected match, the index of the closest match is returned.\r\n\t */\r\n\treplace(replacement: string): number | undefined\r\n\t/**\r\n\t * Replaces all search matches with the specified string.\r\n\t * @param replacement String to replace all matches with.\r\n\t * @param selection Does nothing. Kept for backwards compatibility.\r\n\t */\r\n\treplaceAll(replacement: string, selection?: [number, number]): void\r\n\t/** Removes the highlight container from the DOM and all potential event listeners. */\r\n\tdestroy(): void\r\n}\r\n\r\n/** Function adding both search and replace functionality to an editor. */\r\nconst createReplaceAPI = (editor: PrismEditor): ReplaceAPI => {\r\n\tconst getSelection = editor.getSelection\r\n\tconst search = createSearchAPI(editor)\r\n\tconst container = search.container\r\n\tconst matches = search.matches\r\n\tconst closest = () => {\r\n\t\tconst caretPos = getSelection()[0]\r\n\t\tconst l = matches.length\r\n\t\tfor (let i = l; i; ) {\r\n\t\t\tif (caretPos >= matches[--i][1]) return (i + <any>(matches[i][0] < caretPos)) % l\r\n\t\t}\r\n\t\treturn l ? 0 : -1\r\n\t}\r\n\r\n\tconst toggleClasses = () => {\r\n\t\tcurrentLine?.classList.toggle(\"match-highlight\")\r\n\t\tcurrentMatch?.classList.toggle(\"match\")\r\n\t}\r\n\r\n\tconst removeSelection = () => {\r\n\t\tif (hasSelected) {\r\n\t\t\ttoggleClasses()\r\n\t\t\thasSelected = false\r\n\t\t}\r\n\t}\r\n\r\n\tlet currentLine: HTMLDivElement\r\n\tlet currentMatch: HTMLSpanElement\r\n\tlet hasSelected = false\r\n\r\n\taddTextareaListener(editor, \"focus\", removeSelection)\r\n\r\n\treturn Object.assign(search, {\r\n\t\tnext() {\r\n\t\t\tconst cursor = getSelection()[1]\r\n\t\t\tconst l = matches.length\r\n\t\t\tfor (let i = 0, match: [number, number]; i < l; i++) {\r\n\t\t\t\tmatch = matches[i]\r\n\t\t\t\tif (match[0] - <any>(match[0] == match[1]) >= cursor) return i\r\n\t\t\t}\r\n\t\t\treturn l ? 0 : -1\r\n\t\t},\r\n\t\tprev() {\r\n\t\t\tconst cursor = getSelection()[0]\r\n\t\t\tconst l = matches.length\r\n\t\t\tfor (let i = l, match: [number, number]; i; ) {\r\n\t\t\t\tmatch = matches[--i]\r\n\t\t\t\tif (match[1] + <any>(match[0] == match[1]) <= cursor) return i\r\n\t\t\t}\r\n\t\t\treturn l - 1\r\n\t\t},\r\n\t\tclosest,\r\n\t\tselectMatch(index: number, scrollPadding?: number) {\r\n\t\t\tremoveSelection()\r\n\t\t\tif (matches[index]) {\r\n\t\t\t\teditor.setSelection(...matches[index])\r\n\t\t\t\tcurrentLine = editor.activeLine!\r\n\t\t\t\tcurrentMatch = <HTMLSpanElement>container.children[index]\r\n\t\t\t\thasSelected = true\r\n\t\t\t\ttoggleClasses()\r\n\t\t\t\tif (currentMatch) {\r\n\t\t\t\t\tscrollToEl(editor, currentMatch, scrollPadding)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\treplace(str: string) {\r\n\t\t\tif (matches[0]) {\r\n\t\t\t\tlet index = closest()\r\n\t\t\t\tlet [start, end] = matches[index]\r\n\t\t\t\tlet [caretStart, caretEnd] = getSelection()\r\n\t\t\t\tlet notSelected = start != caretStart || end != caretEnd\r\n\r\n\t\t\t\tif (notSelected) return index\r\n\t\t\t\tif (editor.value.slice(start, end) == str) return matches[++index] ? index : 0\r\n\t\t\t\treturn insertText(editor, str)!\r\n\t\t\t}\r\n\t\t},\r\n\t\treplaceAll(str: string) {\r\n\t\t\tif (!matches[0]) return\r\n\t\t\tlet value = editor.value\r\n\t\t\tlet [start, end] = getSelection()\r\n\t\t\tlet newLen = str.length\r\n\t\t\tlet newStart = start\r\n\t\t\tlet newEnd = end\r\n\t\t\tlet newValue = \"\"\r\n\t\t\tlet l = matches.length\r\n\r\n\t\t\tfor (let i = 0; i < l; i++) {\r\n\t\t\t\tconst [matchStart, matchEnd] = matches[i]\r\n\t\t\t\tconst lengthDiff = newLen - matchEnd + matchStart\r\n\t\t\t\tconst move = (pos: number) =>\r\n\t\t\t\t\tmatchStart > pos\r\n\t\t\t\t\t\t? 0\r\n\t\t\t\t\t\t: pos >= matchEnd\r\n\t\t\t\t\t\t? lengthDiff\r\n\t\t\t\t\t\t: lengthDiff < 0 && pos > matchStart + newLen\r\n\t\t\t\t\t\t? newLen + matchStart - pos\r\n\t\t\t\t\t\t: 0\r\n\r\n\t\t\t\tnewEnd += move(end)\r\n\t\t\t\tnewStart += move(start)\r\n\t\t\t\tnewValue += i ? value.slice(matches[i - 1][1], matchStart) + str : str\r\n\t\t\t}\r\n\r\n\t\t\tinsertText(editor, newValue, matches[0][0], matches[l - 1][1], newStart, newEnd)\r\n\t\t},\r\n\t\tdestroy() {\r\n\t\t\teditor.textarea.removeEventListener(\"focus\", removeSelection)\r\n\t\t\tremoveSelection()\r\n\t\t\tcontainer.remove()\r\n\t\t},\r\n\t})\r\n}\r\n\r\nexport { createReplaceAPI }\r\n"],"names":[],"mappings":"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"}