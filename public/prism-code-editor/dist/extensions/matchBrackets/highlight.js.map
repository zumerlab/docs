{"version":3,"file":"highlight.js","sources":["../../../src/extensions/matchBrackets/highlight.ts"],"sourcesContent":["/** @module highlight-brackets */\r\n\r\nimport { BasicExtension } from \"../../index.js\"\r\nimport { Bracket, BracketMatcher } from \"./index.js\"\r\nimport { getClosestToken } from \"../../utils/index.js\"\r\nimport { addTextareaListener } from \"../../core.js\"\r\n\r\n/**\r\n * Extension adding a `selectionChange` handler to highlight the closest bracket pair.\r\n *\r\n * You must to add a {@link BracketMatcher} to your editor for this extension to work.\r\n *\r\n * The `.active-bracket` CSS selector can be used to highlight the brackets.\r\n */\r\nexport const highlightBracketPairs = (): BasicExtension => editor => {\r\n\tlet brackets: Bracket[],\r\n\t\tmatcher: BracketMatcher | undefined,\r\n\t\tpairs: (number | undefined)[],\r\n\t\tactiveID = -1,\r\n\t\tels: HTMLSpanElement[] = [],\r\n\t\tselectionChange = () => {\r\n\t\t\tmatcher ||= editor.extensions.matchBrackets\r\n\t\t\tlet [start, end] = editor.getSelection()\r\n\t\t\tlet newID = start == end && editor.focused && matcher ? closest(end) || -1 : -1\r\n\t\t\tif (newID != activeID) {\r\n\t\t\t\ttoggleActive()\r\n\t\t\t\tif (newID + 1) {\r\n\t\t\t\t\tlet opening = brackets[pairs[newID]!]\r\n\t\t\t\t\tlet closing = brackets[newID]\r\n\t\t\t\t\tels = [opening, closing].map(\r\n\t\t\t\t\t\tbracket => getClosestToken(editor, \".punctuation\", 0, -1, bracket[1])!,\r\n\t\t\t\t\t)\r\n\r\n\t\t\t\t\tif (els[0] != els[1] && opening[1] + opening[3].length == closing[1]) {\r\n\t\t\t\t\t\tels[0].textContent += els[1].textContent!\r\n\t\t\t\t\t\tels[1].textContent = \"\"\r\n\t\t\t\t\t\tels[1] = els[0]\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoggleActive(true)\r\n\t\t\t\t} else els = []\r\n\r\n\t\t\t\tactiveID = newID\r\n\t\t\t}\r\n\t\t},\r\n\t\tclosest = (offset: number) => {\r\n\t\t\t;({ brackets, pairs } = matcher!)\r\n\t\t\tfor (let i = 0, bracket: Bracket; (bracket = brackets[++i]); ) {\r\n\t\t\t\tif (!bracket[4] && bracket[5] >= offset && brackets[pairs[i]!]?.[1] <= offset) {\r\n\t\t\t\t\treturn i\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoggleActive = (add?: boolean) =>\r\n\t\t\tels.forEach(el => el.classList.toggle(\"active-bracket\", !!add))\r\n\r\n\taddTextareaListener(editor, \"focus\", selectionChange)\r\n\taddTextareaListener(editor, \"blur\", selectionChange)\r\n\teditor.addListener(\"selectionChange\", selectionChange)\r\n\teditor.addListener(\"update\", () => {\r\n\t\ttoggleActive()\r\n\t\tactiveID = -1\r\n\t})\r\n}\r\n"],"names":[],"mappings":";;AAca,MAAA,wBAAwB,MAAsB,CAAU,WAAA;AAChE,MAAA,UACH,SACA,OACA,WAAW,IACX,MAAyB,IACzB,kBAAkB,MAAM;AACvB,0BAAY,OAAO,WAAW;AAC9B,QAAI,CAAC,OAAO,GAAG,IAAI,OAAO,aAAa;AACnC,QAAA,QAAQ,SAAS,OAAO,OAAO,WAAW,UAAU,QAAQ,GAAG,KAAK,KAAK;AAC7E,QAAI,SAAS,UAAU;AACT;AACb,UAAI,QAAQ,GAAG;AACd,YAAI,UAAU,SAAS,MAAM,KAAK,CAAE;AAChC,YAAA,UAAU,SAAS,KAAK;AACtB,cAAA,CAAC,SAAS,OAAO,EAAE;AAAA,UACxB,CAAA,YAAW,gBAAgB,QAAQ,gBAAgB,GAAG,IAAI,QAAQ,CAAC,CAAC;AAAA,QAAA;AAGrE,YAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,QAAQ,CAAC,IAAI,QAAQ,CAAC,EAAE,UAAU,QAAQ,CAAC,GAAG;AACrE,cAAI,CAAC,EAAE,eAAe,IAAI,CAAC,EAAE;AACzB,cAAA,CAAC,EAAE,cAAc;AACjB,cAAA,CAAC,IAAI,IAAI,CAAC;AAAA,QACf;AACA,qBAAa,IAAI;AAAA,MAClB;AAAO,cAAM,CAAA;AAEF,iBAAA;AAAA,IACZ;AAAA,EAAA,GAED,UAAU,CAAC,WAAmB;AAC3B,KAAA,EAAE,UAAU,MAAU,IAAA;AACxB,aAAS,IAAI,GAAG,SAAmB,UAAU,SAAS,EAAE,CAAC,KAAM;AAC9D,UAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,CAAC,KAAK,UAAU,SAAS,MAAM,CAAC,CAAE,IAAI,CAAC,KAAK,QAAQ;AACvE,eAAA;AAAA,MACR;AAAA,IACD;AAAA,EAED,GAAA,eAAe,CAAC,QACf,IAAI,QAAQ,CAAA,OAAM,GAAG,UAAU,OAAO,kBAAkB,CAAC,CAAC,GAAG,CAAC;AAE5C,sBAAA,QAAQ,SAAS,eAAe;AAChC,sBAAA,QAAQ,QAAQ,eAAe;AAC5C,SAAA,YAAY,mBAAmB,eAAe;AAC9C,SAAA,YAAY,UAAU,MAAM;AACrB;AACF,eAAA;AAAA,EAAA,CACX;AACF;"}