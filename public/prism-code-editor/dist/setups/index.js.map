{"version":3,"file":"index.js","sources":["../../src/setups/index.ts"],"sourcesContent":["import { EditorOptions, PrismEditor, createEditor } from \"../index.js\"\r\nimport { getElement } from \"../core.js\"\r\nimport { defaultCommands, editHistory } from \"../extensions/commands.js\"\r\nimport { copyButton } from \"../extensions/copyButton/index.js\"\r\nimport { readOnlyCodeFolding } from \"../extensions/folding/index.js\"\r\nimport { indentGuides } from \"../extensions/guides.js\"\r\nimport { highlightBracketPairs } from \"../extensions/matchBrackets/highlight.js\"\r\nimport { matchBrackets } from \"../extensions/matchBrackets/index.js\"\r\nimport { matchTags } from \"../extensions/matchTags.js\"\r\nimport { highlightSelectionMatches } from \"../extensions/search/selection.js\"\r\nimport { searchWidget } from \"../extensions/search/widget.js\"\r\nimport { loadTheme } from \"../themes/index.js\"\r\n\r\nexport type SetupOptions = Partial<EditorOptions> & { theme: string }\r\n\r\nconst addStyles = (shadow: ShadowRoot, styles: string, id?: string) => {\r\n\tconst style = document.createElement(\"style\")\r\n\tstyle.textContent = styles\r\n\tif (id) style.id = id\r\n\tshadow.append(style)\r\n}\r\n\r\n/**\r\n * Updates the theme of an editor. The editor needs to be inside a shadow root with a style\r\n * element for the theme whoose `id` is `\"theme\"`. This is the case when using the setups.\r\n * @param editor Editor you want to change the theme of.\r\n * @param theme Name of the new theme.\r\n */\r\nconst updateTheme = (editor: PrismEditor, theme: string) => {\r\n\tconst el = editor.scrollContainer.parentNode\r\n\tif (el instanceof ShadowRoot) {\r\n\t\tconst style = el.getElementById(\"theme\")\r\n\t\tif (style)\r\n\t\t\tloadTheme(theme).then(theme => {\r\n\t\t\t\ttheme && (style.textContent = theme)\r\n\t\t\t})\r\n\t}\r\n}\r\n\r\n/**\r\n * Adds an editor inside a shadow root to the given element and asynchronously loads the styles.\r\n * @param container Must be an element you can attach a shadow root to\r\n * @param options Options to create the editor as well as the theme to use.\r\n * @param readyCallback Function called when the styles are loaded.\r\n * @returns Object to interact with the editor.\r\n */\r\nconst minimalEditor = (\r\n\tcontainer: HTMLElement | string,\r\n\toptions: SetupOptions,\r\n\treadyCallback?: () => any,\r\n) => {\r\n\tconst el = <HTMLElement>getElement(container)\r\n\tconst shadow = el.shadowRoot || el.attachShadow({ mode: \"open\" })\r\n\tconst editor = createEditor()\r\n\r\n\tPromise.all([import(\"./styles\"), loadTheme(options.theme)]).then(([style, theme]) => {\r\n\t\tif (!editor.removed) {\r\n\t\t\taddStyles(shadow, style.default)\r\n\t\t\taddStyles(shadow, theme || \"\", \"theme\")\r\n\t\t\tshadow.append(editor.scrollContainer)\r\n\t\t\teditor.setOptions(options)\r\n\t\t\treadyCallback && readyCallback()\r\n\t\t}\r\n\t})\r\n\r\n\treturn editor\r\n}\r\n\r\n/**\r\n * Same as {@link minimalEditor}, but also adds {@link indentGuides}, {@link highlightSelectionMatches},\r\n * {@link matchBrackets}, {@link highlightBracketPairs}, {@link defaultCommands} and {@link editHistory}\r\n * extensions and language specific behavior.\r\n * \r\n * There's also an extension added that clears the history stack every time the value is\r\n * changed programmatically.\r\n */\r\nconst basicEditor = (\r\n\tcontainer: HTMLElement | string,\r\n\toptions: SetupOptions,\r\n\treadyCallback?: () => any,\r\n) => {\r\n\timport(\"./common\").then(mod => {\r\n\t\teditor.addExtensions(...mod.common())\r\n\t})\r\n\r\n\tconst editor = minimalEditor(container, options, readyCallback)\r\n\r\n\treturn editor\r\n}\r\n\r\n/**\r\n * Same as {@link basicEditor}, but also adds the {@link searchWidget} and {@link matchTags} extensions.\r\n * @deprecated Will get merged with {@link basicEditor} in the next major release.\r\n */\r\nconst fullEditor = (\r\n\tcontainer: HTMLElement | string,\r\n\toptions: SetupOptions,\r\n\treadyCallback?: () => any,\r\n) => {\r\n\timport(\"./common\").then(mod => {\r\n\t\teditor.addExtensions(...mod.common())\r\n\t})\r\n\r\n\tconst el = <HTMLElement>getElement(container)\r\n\tconst editor = minimalEditor(el, options, readyCallback)\r\n\r\n\timport(\"../extensions/search/search.css?inline\").then(module => {\r\n\t\teditor.removed || addStyles(el.shadowRoot!, module.default)\r\n\t})\r\n\r\n\timport(\"./full\").then(mod => {\r\n\t\teditor.addExtensions(...mod.full())\r\n\t})\r\n\r\n\treturn editor\r\n}\r\n\r\n/**\r\n * Same as {@link minimalEditor}, but also adds the {@link copyButton}, {@link matchBrackets},\r\n * {@link highlightBracketPairs}, {@link matchTags}, {@link indentGuides}, {@link highlightSelectionMatches}\r\n * and {@link readOnlyCodeFolding} extensions. No commands are added which makes this setup\r\n * best used with the `readOnly` option set to true.\r\n */\r\nconst readonlyEditor = (\r\n\tcontainer: HTMLElement | string,\r\n\toptions: SetupOptions,\r\n\treadyCallback?: () => any,\r\n) => {\r\n\timport(\"./readonly\").then(mod => {\r\n\t\tmod.addExtensions(editor)\r\n\t\teditor.removed || addStyles(el.shadowRoot!, mod.style)\r\n\t})\r\n\r\n\tconst el = <HTMLElement>getElement(container)\r\n\tconst editor = minimalEditor(el, options, readyCallback)\r\n\r\n\treturn editor\r\n}\r\n\r\nexport { basicEditor, fullEditor, minimalEditor, readonlyEditor, updateTheme }\r\n"],"names":["theme"],"mappings":";;AAeA,MAAM,YAAY,CAAC,QAAoB,QAAgB,OAAgB;AAChE,QAAA,QAAQ,SAAS,cAAc,OAAO;AAC5C,QAAM,cAAc;AAChB,MAAA;AAAI,UAAM,KAAK;AACnB,SAAO,OAAO,KAAK;AACpB;AAQM,MAAA,cAAc,CAAC,QAAqB,UAAkB;AACrD,QAAA,KAAK,OAAO,gBAAgB;AAClC,MAAI,cAAc,YAAY;AACvB,UAAA,QAAQ,GAAG,eAAe,OAAO;AACnC,QAAA;AACH,gBAAU,KAAK,EAAE,KAAK,CAAAA,WAAS;AAC9BA,mBAAU,MAAM,cAAcA;AAAAA,MAAA,CAC9B;AAAA,EACH;AACD;AASA,MAAM,gBAAgB,CACrB,WACA,SACA,kBACI;AACE,QAAA,KAAkB,WAAW,SAAS;AACtC,QAAA,SAAS,GAAG,cAAc,GAAG,aAAa,EAAE,MAAM,QAAQ;AAChE,QAAM,SAAS;AAEf,UAAQ,IAAI,CAAC,OAAO,uBAAU,GAAG,UAAU,QAAQ,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,KAAK,MAAM;AAChF,QAAA,CAAC,OAAO,SAAS;AACV,gBAAA,QAAQ,MAAM,OAAO;AACrB,gBAAA,QAAQ,SAAS,IAAI,OAAO;AAC/B,aAAA,OAAO,OAAO,eAAe;AACpC,aAAO,WAAW,OAAO;AACzB,uBAAiB,cAAc;AAAA,IAChC;AAAA,EAAA,CACA;AAEM,SAAA;AACR;AAUA,MAAM,cAAc,CACnB,WACA,SACA,kBACI;AACG,SAAA,uBAAU,EAAE,KAAK,CAAO,QAAA;AAC9B,WAAO,cAAc,GAAG,IAAI,OAAQ,CAAA;AAAA,EAAA,CACpC;AAED,QAAM,SAAS,cAAc,WAAW,SAAS,aAAa;AAEvD,SAAA;AACR;AAMA,MAAM,aAAa,CAClB,WACA,SACA,kBACI;AACG,SAAA,uBAAU,EAAE,KAAK,CAAO,QAAA;AAC9B,WAAO,cAAc,GAAG,IAAI,OAAQ,CAAA;AAAA,EAAA,CACpC;AAEK,QAAA,KAAkB,WAAW,SAAS;AAC5C,QAAM,SAAS,cAAc,IAAI,SAAS,aAAa;AAEhD,SAAA,uBAAwC,EAAE,KAAK,CAAU,WAAA;AAC/D,WAAO,WAAW,UAAU,GAAG,YAAa,OAAO,OAAO;AAAA,EAAA,CAC1D;AAEM,SAAA,qBAAQ,EAAE,KAAK,CAAO,QAAA;AAC5B,WAAO,cAAc,GAAG,IAAI,KAAM,CAAA;AAAA,EAAA,CAClC;AAEM,SAAA;AACR;AAQA,MAAM,iBAAiB,CACtB,WACA,SACA,kBACI;AACG,SAAA,yBAAY,EAAE,KAAK,CAAO,QAAA;AAChC,QAAI,cAAc,MAAM;AACxB,WAAO,WAAW,UAAU,GAAG,YAAa,IAAI,KAAK;AAAA,EAAA,CACrD;AAEK,QAAA,KAAkB,WAAW,SAAS;AAC5C,QAAM,SAAS,cAAc,IAAI,SAAS,aAAa;AAEhD,SAAA;AACR;"}