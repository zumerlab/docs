{"version":3,"file":"ruby.js","sources":["../../../src/prism/languages/ruby.js"],"sourcesContent":["import { languages } from '../core.js';\r\nimport { boolean, clikeNumber } from '../utils/patterns.js';\r\n\r\nvar interpolationContent = {\r\n\tpattern: /^(..)[\\s\\S]+(?=.)/,\r\n\tlookbehind: true,\r\n};\r\n\r\nvar percentExpression = /(?:([^a-zA-Z\\d\\s{(\\[<=])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\((?:\\\\[\\s\\S]|[^\\\\()]|\\((?:\\\\[\\s\\S]|[^\\\\()])*\\))*\\)|\\{(?:\\\\[\\s\\S]|[^\\\\{}]|\\{(?:\\\\[\\s\\S]|[^\\\\{}])*\\})*\\}|\\[(?:\\\\[\\s\\S]|[^\\\\[\\]]|\\[(?:\\\\[\\s\\S]|[^\\\\[\\]])*\\])*\\]|<(?:\\\\[\\s\\S]|[^\\\\<>]|<(?:\\\\[\\s\\S]|[^\\\\<>])*>)*>)/.source;\r\n\r\nvar symbolName = /(?:\"(?:\\\\.|[^\\\\\\n\"])*\"|(?:\\b(?!\\d)\\w+|[^\\s\\0-\\x7f]+)[?!]?|\\$.)/.source;\r\n\r\nvar interpolation = {\r\n\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)#\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\r\n\tlookbehind: true,\r\n\tinside: {\r\n\t\t'content': interpolationContent,\r\n\t\t'delimiter': {\r\n\t\t\tpattern: /.+/,\r\n\t\t\talias: 'punctuation'\r\n\t\t}\r\n\t}\r\n}\r\n\r\ninterpolationContent.inside = languages.rb = languages.ruby = {\r\n\t'comment': {\r\n\t\tpattern: /#.*|^=begin\\s[\\s\\S]*?^=end/mg,\r\n\t\tgreedy: true\r\n\t},\r\n\t'string-literal': [\r\n\t\t{\r\n\t\t\tpattern: RegExp(/%[qQiIwWs]?/.source + percentExpression, 'g'),\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation,\r\n\t\t\t\t'string': /[\\s\\S]+/\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /([\"'])(?:#\\{[^}]+\\}|#(?!\\{)|\\\\[\\s\\S]|(?!\\1)[^\\\\#\\n])*\\1/g,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation,\r\n\t\t\t\t'string': /[\\s\\S]+/\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /<<[-~]?([a-z_]\\w*)\\n(?:.*\\n)*?[ \\t]*\\1/gi,\r\n\t\t\talias: 'heredoc-string',\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'delimiter': {\r\n\t\t\t\t\tpattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'symbol': /\\w+/,\r\n\t\t\t\t\t\t'punctuation': /^<<[-~]?/\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'interpolation': interpolation,\r\n\t\t\t\t'string': /[\\s\\S]+/\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /<<[-~]?'([a-z_]\\w*)'\\n(?:.*\\n)*?[ \\t]*\\1/gi,\r\n\t\t\talias: 'heredoc-string',\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'delimiter': {\r\n\t\t\t\t\tpattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'symbol': /\\w+/,\r\n\t\t\t\t\t\t'punctuation': /^<<[-~]?'|'$/,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t'string': /[\\s\\S]+/\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'command-literal': [\r\n\t\t{\r\n\t\t\tpattern: RegExp(/%x/.source + percentExpression, 'g'),\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation,\r\n\t\t\t\t'command': {\r\n\t\t\t\t\tpattern: /[\\s\\S]+/,\r\n\t\t\t\t\talias: 'string'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\[\\s\\S]|[^\\\\`#\\n])*`/g,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation,\r\n\t\t\t\t'command': {\r\n\t\t\t\t\tpattern: /[\\s\\S]+/,\r\n\t\t\t\t\talias: 'string'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'class-name': {\r\n\t\tpattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'punctuation': /[.\\\\]/\r\n\t\t}\r\n\t},\r\n\t'regex-literal': [\r\n\t\t{\r\n\t\t\tpattern: RegExp(`%r${percentExpression}[egimnosux]{0,6}`, 'g'),\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation,\r\n\t\t\t\t'regex': /[\\s\\S]+/\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\]]+\\]|\\\\.|[^\\\\\\n/[])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\n,.;})#]))/g,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation,\r\n\t\t\t\t'regex': /[\\s\\S]+/\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'variable': /[@$]+(?!\\d)\\w+(?:[?!]|\\b)/,\r\n\t'symbol': [\r\n\t\t{\r\n\t\t\tpattern: RegExp(/(^|[^:]):/.source + symbolName, 'g'),\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: RegExp(/([\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source, 'g'),\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t],\r\n\t'method-definition': {\r\n\t\tpattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'function': /\\b\\w+$/,\r\n\t\t\t'keyword': /^self\\b/,\r\n\t\t\t'class-name': /^\\w+/,\r\n\t\t\t'punctuation': /\\./\r\n\t\t}\r\n\t},\r\n\t'keyword': /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|f?or|if|in|include|module|new|next|nil|not|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|[tw]hen|throw|undef|unless|until|while|yield)\\b/,\r\n\t'boolean': boolean,\r\n\t'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\r\n\t'constant': /\\b[A-Z][A-Z\\d_]*(?:[?!]|\\b)/,\r\n\t'number': clikeNumber,\r\n\t'double-colon': {\r\n\t\tpattern: /::/,\r\n\t\talias: 'punctuation'\r\n\t},\r\n\t'operator': /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[%&|^!=<>/*+-])=?|[?:]/,\r\n\t'punctuation': /[()[\\]{}.,;]/,\r\n};\r\n"],"names":[],"mappings":"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"}