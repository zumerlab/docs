{"version":3,"file":"parser.js","sources":["../../../src/prism/languages/parser.js"],"sourcesContent":["import { languages } from '../core.js';\r\nimport { extend, insertBefore } from '../utils/language.js';\r\nimport { boolean } from '../utils/patterns.js';\r\nimport './markup.js';\r\n\r\nvar keyword = {\r\n\tpattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\r\n\tlookbehind: true\r\n};\r\n\r\nvar variable = {\r\n\tpattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\r\n\tlookbehind: true,\r\n\tinside: {\r\n\t\t'punctuation': /\\.|:+/\r\n\t}\r\n};\r\n\r\nvar func = {\r\n\tpattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\r\n\tlookbehind: true,\r\n\tinside: {\r\n\t\t'keyword': {\r\n\t\t\tpattern: /(^@)(?:GET_|SET_)/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'punctuation': /\\.|:+/\r\n\t}\r\n};\r\n\r\nvar escape = {\r\n\tpattern: /\\^(?:[$^;@()[\\]{}\"':]|#[a-f\\d]*)/i,\r\n\talias: 'builtin'\r\n};\r\n\r\nvar punctuation = /[()[\\]{};]/;\r\n\r\nvar expression = {\r\n\t// Allow for 3 levels of depth\r\n\tpattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/g,\r\n\tlookbehind: true,\r\n\tgreedy: true,\r\n\tinside: {\r\n\t\t'string': {\r\n\t\t\tpattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t'keyword': keyword,\r\n\t\t'variable': variable,\r\n\t\t'function': func,\r\n\t\t'boolean': boolean,\r\n\t\t'number': /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\r\n\t\t'escape': escape,\r\n\t\t'operator': /[~/\\\\%*+]|!\\|\\|?|&&?|\\|\\|?|==|>>|<<|[!<>]=?|-[fd]?|\\b(?:def|eq|[gl][et]|in|is|ne)\\b/,\r\n\t\t'punctuation': punctuation\r\n\t}\r\n};\r\n\r\nvar parser = languages.parser = extend('html', {\r\n\t'parser-comment': {\r\n\t\tpattern: /(\\s)#.*/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'comment'\r\n\t},\r\n\t'expression': expression,\r\n\t'keyword': keyword,\r\n\t'variable': variable,\r\n\t'function': func,\r\n\t'escape': escape,\r\n\t'punctuation': punctuation\r\n});\r\n\r\ninsertBefore(parser['tag'].inside['attr-value'][2].inside, 'punctuation', {\r\n\t'expression': expression,\r\n\t'keyword': keyword,\r\n\t'variable': variable,\r\n\t'function': func,\r\n\t'escape': escape,\r\n\t'parser-punctuation': {\r\n\t\tpattern: punctuation,\r\n\t\talias: 'punctuation'\r\n\t}\r\n});\r\n\r\ndelete parser['markup-bracket'];\r\n"],"names":[],"mappings":";;;;AAKA,IAAI,UAAU;AAAA,EACb,SAAS;AAAA,EACT,YAAY;AACb;AAEA,IAAI,WAAW;AAAA,EACd,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,QAAQ;AAAA,IACP,eAAe;AAAA,EACf;AACF;AAEA,IAAI,OAAO;AAAA,EACV,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,QAAQ;AAAA,IACP,WAAW;AAAA,MACV,SAAS;AAAA,MACT,YAAY;AAAA,IACZ;AAAA,IACD,eAAe;AAAA,EACf;AACF;AAEA,IAAI,SAAS;AAAA,EACZ,SAAS;AAAA,EACT,OAAO;AACR;AAEA,IAAI,cAAc;AAElB,IAAI,aAAa;AAAA;AAAA,EAEhB,SAAS;AAAA,EACT,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,QAAQ;AAAA,IACP,UAAU;AAAA,MACT,SAAS;AAAA,MACT,YAAY;AAAA,IACZ;AAAA,IACD,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,eAAe;AAAA,EACf;AACF;AAEA,IAAI,SAAS,UAAU,SAAS,OAAO,QAAQ;AAAA,EAC9C,kBAAkB;AAAA,IACjB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO;AAAA,EACP;AAAA,EACD,cAAc;AAAA,EACd,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,eAAe;AAChB,CAAC;AAED,aAAa,OAAO,KAAK,EAAE,OAAO,YAAY,EAAE,CAAC,EAAE,QAAQ,eAAe;AAAA,EACzE,cAAc;AAAA,EACd,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,sBAAsB;AAAA,IACrB,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AACF,CAAC;AAED,OAAO,OAAO,gBAAgB;"}