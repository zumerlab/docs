{"version":3,"file":"dart.js","sources":["../../../src/prism/languages/dart.js"],"sourcesContent":["import { languages } from '../core.js';\r\nimport { boolean, clikeComment, clikeNumber, clikePunctuation } from '../utils/patterns.js';\r\n\r\nvar keywords = /\\b(?:a?sync|yield)\\b\\*?|\\b(?:abstract|assert|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|[gs]et|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|show|static|super|switch|this|throw|try|typedef|var|void|while|with)\\b/;\r\n\r\n// Handles named imports, such as http.Client\r\nvar packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\r\n\r\n// based on the dart naming conventions\r\nvar className = {\r\n\tpattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\r\n\tlookbehind: true,\r\n\tinside: {\r\n\t\t'namespace': {\r\n\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\r\n\t\t\tinside: {\r\n\t\t\t\t'punctuation': /\\./\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n};\r\n\r\nlanguages.dart = {\r\n\t'comment': clikeComment(),\r\n\t'string-literal': {\r\n\t\tpattern: /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\n])*\\2(?!\\2))/g,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^}]*\\})*\\})/,\r\n\t\t\t\tlookbehind: true,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^\\$\\{?|\\}$/,\r\n\t\t\t\t\t'expression': {\r\n\t\t\t\t\t\tpattern: /[\\s\\S]+/,\r\n\t\t\t\t\t\tinside: 'dart'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'string': /[\\s\\S]+/\r\n\t\t}\r\n\t},\r\n\t'metadata': {\r\n\t\tpattern: /@\\w+/,\r\n\t\talias: 'function'\r\n\t},\r\n\t'generics': {\r\n\t\tpattern: /<(?:[\\w\\s.,&?]|<(?:[\\w\\s.,&?]|<(?:[\\w\\s.,&?]|<[\\w\\s.,&?]*>)*>)*>)*>/,\r\n\t\tinside: {\r\n\t\t\t'class-name': className,\r\n\t\t\t'keyword': keywords,\r\n\t\t\t'punctuation': /[().,:<>]/,\r\n\t\t\t'operator': /[?&|]/\r\n\t\t}\r\n\t},\r\n\t'class-name': [\r\n\t\tclassName,\r\n\t\t{\r\n\t\t\t// variables and parameters\r\n\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\r\n\t\t\tpattern: RegExp(packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source),\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: className.inside\r\n\t\t}\r\n\t],\r\n\t'keyword': keywords,\r\n\t'boolean': boolean,\r\n\t'function': /\\b\\w+(?=\\()/,\r\n\t'number': clikeNumber,\r\n\t'operator': /\\bis!|\\b[ai]s\\b|--|\\+\\+|&&|\\|\\||<<=?|>>=?|~\\/=?|[*/%&^|!=<>+-]=?|[~?]/,\r\n\t'punctuation': clikePunctuation\r\n}\r\n"],"names":[],"mappings":";;AAGA,IAAI,WAAW;AAGf,IAAI,gBAAgB;AAGpB,IAAI,YAAY;AAAA,EACf,SAAS,OAAO,gBAAgB,kCAAsC;AAAA,EACtE,YAAY;AAAA,EACZ,QAAQ;AAAA,IACP,aAAa;AAAA,MACZ,SAAS;AAAA,MACT,QAAQ;AAAA,QACP,eAAe;AAAA,MACf;AAAA,IACD;AAAA,EACD;AACF;AAEA,UAAU,OAAO;AAAA,EAChB,WAAW,aAAc;AAAA,EACzB,kBAAkB;AAAA,IACjB,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACP,iBAAiB;AAAA,QAChB,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,QAAQ;AAAA,UACP,eAAe;AAAA,UACf,cAAc;AAAA,YACb,SAAS;AAAA,YACT,QAAQ;AAAA,UACR;AAAA,QACD;AAAA,MACD;AAAA,MACD,UAAU;AAAA,IACV;AAAA,EACD;AAAA,EACD,YAAY;AAAA,IACX,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EACD,YAAY;AAAA,IACX,SAAS;AAAA,IACT,QAAQ;AAAA,MACP,cAAc;AAAA,MACd,WAAW;AAAA,MACX,eAAe;AAAA,MACf,YAAY;AAAA,IACZ;AAAA,EACD;AAAA,EACD,cAAc;AAAA,IACb;AAAA,IACA;AAAA;AAAA;AAAA,MAGC,SAAS,OAAO,gBAAgB,kCAAqC;AAAA,MACrE,YAAY;AAAA,MACZ,QAAQ,UAAU;AAAA,IAClB;AAAA,EACD;AAAA,EACD,WAAW;AAAA,EACX,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,YAAY;AAAA,EACZ,eAAe;AAChB;"}