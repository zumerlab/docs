{"version":3,"file":"pug.js","sources":["../../../src/prism/languages/pug.js"],"sourcesContent":["import { languages, rest } from '../core.js';\r\nimport { re } from '../utils/shared.js';\r\nimport './markup.js';\r\nimport './javascript.js';\r\n\r\n// TODO:\r\n// - Add CSS highlighting inside <style> tags\r\n// - Add support for multi-line code blocks\r\n// - Add support for interpolation #{} and !{}\r\n// - Add support for tag interpolation #[]\r\n// - Add explicit support for plain text using |\r\n// - Add support for markup embedded in plain text\r\n\r\nvar js = languages.js;\r\nvar filter_pattern = /(^[ \\t]*):<0>(?:$\\s*?\\n\\1[ \\t]+\\S.*)+/.source;\r\n\r\nvar langMap = {\r\n\tatpl: 'twig',\r\n\tcoffee: 'coffeescript',\r\n\tsass: 'scss'\r\n};\r\n\r\nvar pug = languages.pug = {\r\n\r\n\t// Multiline stuff should appear before the rest\r\n\r\n\t// This handles both single-line and multi-line comments\r\n\t'comment': {\r\n\t\tpattern: /(^[ \\t]*)\\/\\/.*(?:$\\s*?\\n\\1[ \\t]+\\S.*)*/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\r\n\t// All the tag-related part is in lookbehind\r\n\t// so that it can be highlighted by the \"tag\" pattern\r\n\t'multiline-script': {\r\n\t\tpattern: /(^([ \\t]*)script\\b.*\\.[ \\t]*)(?:$\\s*?\\n\\2[ \\t]+\\S.*)+/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: js\r\n\t}\r\n};\r\n\r\n// Non exhaustive list of available filters\r\n[\r\n\t'atpl',\r\n\t'coffee',\r\n\t'ejs',\r\n\t'handlebars',\r\n\t'less',\r\n\t'livescript',\r\n\t'markdown',\r\n\t'sass',\r\n\t'stylus'\r\n].forEach(filter => {\r\n\tvar language = langMap[filter] || filter;\r\n\tpug['filter-' + filter] = {\r\n\t\tpattern: re(filter_pattern, [filter], 'm'),\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'filter-name': {\r\n\t\t\t\tpattern: /^:.+/,\r\n\t\t\t\talias: 'variable'\r\n\t\t\t},\r\n\t\t\t'text': {\r\n\t\t\t\tpattern: /\\S[\\s\\S]*/,\r\n\t\t\t\talias: 'language-' + language,\r\n\t\t\t\tinside: language\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n});\r\n\r\nObject.assign(pug, {\r\n\t'filter': {\r\n\t\tpattern: re(filter_pattern, ['.+'], 'm'),\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'filter-name': {\r\n\t\t\t\tpattern: /^:.+/,\r\n\t\t\t\talias: 'variable'\r\n\t\t\t},\r\n\t\t\t'text': /\\S[\\s\\S]*/,\r\n\t\t}\r\n\t},\r\n\r\n\t'multiline-plain-text': {\r\n\t\tpattern: /(^([ \\t]*)[\\w#.-]+\\.[ \\t]*)(?:$\\s*?\\n\\2[ \\t]+\\S.*)+/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'markup': {\r\n\t\tpattern: /(^[ \\t]*)<.+/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: languages.html\r\n\t},\r\n\t'doctype': {\r\n\t\tpattern: /((?:^|\\n)[ \\t]*)doctype(?: .+)?/,\r\n\t\tlookbehind: true\r\n\t},\r\n\r\n\t// This handle all conditional and loop keywords\r\n\t'flow-control': {\r\n\t\tpattern: /(^[ \\t]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'each': {\r\n\t\t\t\tpattern: /^each .+? in\\b/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'keyword': /^\\w+|in$/,\r\n\t\t\t\t\t'punctuation': /,/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'branch': {\r\n\t\t\t\tpattern: /^\\w+/,\r\n\t\t\t\talias: 'keyword'\r\n\t\t\t},\r\n\t\t\t[rest]: js\r\n\t\t}\r\n\t},\r\n\t'keyword': {\r\n\t\tpattern: /(^[ \\t]*)(?:append|block|extends|include|prepend)\\b.+/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'mixin': [\r\n\t\t// Declaration\r\n\t\t{\r\n\t\t\tpattern: /(^[ \\t]*)mixin .+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'keyword': /^mixin/,\r\n\t\t\t\t'function': /\\b\\w+(?!\\s*[^\\s(])/,\r\n\t\t\t\t'punctuation': /[().,]/\r\n\t\t\t}\r\n\t\t},\r\n\t\t// Usage\r\n\t\t{\r\n\t\t\tpattern: /(^[ \\t]*)\\+.+/m,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'name': {\r\n\t\t\t\t\tpattern: /^\\+\\w+/,\r\n\t\t\t\t\talias: 'function'\r\n\t\t\t\t},\r\n\t\t\t\t[rest]: js\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'script': {\r\n\t\tpattern: /(^[ \\t]*script(?:(?:&[^(]+)?\\([^)]+\\))*[ \\t]).+/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: js\r\n\t},\r\n\r\n\t'plain-text': {\r\n\t\tpattern: /(^[ \\t]*(?!-)[\\w#.-]*[\\w-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[ \\t]).+/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'tag': {\r\n\t\tpattern: /(^[ \\t]*)(?!-)[\\w#.-]*[\\w-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\t'attributes': [\r\n\t\t\t\t{\r\n\t\t\t\t\tpattern: /&[^(]+\\([^)]+\\)/,\r\n\t\t\t\t\tinside: js\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpattern: /\\([^)]+\\)/,\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'attr-value': {\r\n\t\t\t\t\t\t\tpattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^\\n,)]+)/,\r\n\t\t\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\t\t\tinside: js\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\r\n\t\t\t\t\t\t'punctuation': /[!=(),]+/\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\t'punctuation': /:/,\r\n\t\t\t'attr-id': /#[\\w-]+/,\r\n\t\t\t'attr-class': /\\.[\\w-]+/\r\n\t\t}\r\n\t},\r\n\t'code': {\r\n\t\tpattern: /(^[ \\t]*(?:-|!?=)).+/m,\r\n\t\tlookbehind: true,\r\n\t\tinside: js\r\n\t},\r\n\t'punctuation': /[.!=|-]+/\r\n});\r\n"],"names":[],"mappings":"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"}