{"version":3,"file":"pure.js","sources":["../../../src/prism/languages/pure.js"],"sourcesContent":["import { languages, rest } from '../core.js';\r\nimport { re } from '../utils/shared.js';\r\n\r\n// https://agraef.github.io/pure-docs/pure.html#lexical-matters\r\n\r\n/** @param {string} lang */\r\nvar inside = lang => ({\r\n\t'lang': {\r\n\t\tpattern: /(^%< *)-\\*-.+?-\\*-/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'comment'\r\n\t},\r\n\t'delimiter': {\r\n\t\tpattern: /^%<.*|%>$/,\r\n\t\talias: 'punctuation'\r\n\t},\r\n\t[rest]: lang\r\n});\r\n\r\nvar pure = languages.pure = {\r\n\t'comment': /#!.+|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//\r\n};\r\n\r\nvar inlineLanguages = [\r\n\t'c', 'c\\\\+\\\\+', 'fortran'\r\n];\r\nvar inlineLanguageRe = /%< *-\\*- *<0>\\d* *-\\*-[\\s\\S]+?%>/.source;\r\n\r\ninlineLanguages.forEach(lang => {\r\n\tvar alias = lang.length == 5 ? 'cpp' : lang;\r\n\tpure['inline-lang-' + alias] = {\r\n\t\tpattern: re(inlineLanguageRe, [lang], 'i'),\r\n\t\tinside: inside(alias)\r\n\t};\r\n});\r\n\r\nObject.assign(pure, {\r\n\t'inline-lang': {\r\n\t\tpattern: /%<[\\s\\S]+?%>/g,\r\n\t\tgreedy: true,\r\n\t\tinside: inside('c')\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /\"(?:\\\\.|[^\\\\\\n\"])*\"/g,\r\n\t\tgreedy: true\r\n\t},\r\n\t'number': {\r\n\t\t// The look-behind prevents wrong highlighting of the .. operator\r\n\t\tpattern: /(\\.\\.)?(?:\\b(?:inf|nan)\\b|\\b0x[a-f\\d]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?)/i,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'keyword': /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|de[fl]|dump|else|end|exit|extern|false|true|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|[tw]hen|throw|trace|type|underride|using|with)\\b/,\r\n\t'function': /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix_view|_matrix|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:errpos|err)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|max|member|min|nanp|nargs|n?matrixp?|null|numberp?|ord|packed|pack|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int64|int|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce_with|reduce|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcatmap|rowcat|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|su[bp]diag(?:mat)?|submat|subseq2?|substr|succ|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vectorseq|vectorp?|void|zip3?|zipwith3?)\\b/,\r\n\t'special': {\r\n\t\tpattern: /\\b__[a-z]+__\\b/i,\r\n\t\talias: 'builtin'\r\n\t},\r\n\t// Any combination of operator chars can be an operator\r\n\t// eslint-disable-next-line no-misleading-character-class\r\n\t'operator': /(?:[\\\\#$\"'.,:?@`~\\xa1-\\xbf\\xd7-\\xf7\\u20d0-\\u2bff%&|^!=<>/*+-]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\r\n\t// FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\r\n\t'punctuation': /[()[\\]{},;|]/\r\n});\r\n"],"names":[],"mappings":";;AAMA,IAAI,SAAS,WAAS;AAAA,EACrB,QAAQ;AAAA,IACP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,OAAO;AAAA,EACP;AAAA,EACD,aAAa;AAAA,IACZ,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EACD,CAAC,IAAI,GAAG;AACT;AAEA,IAAI,OAAO,UAAU,OAAO;AAAA,EAC3B,WAAW;AACZ;AAEA,IAAI,kBAAkB;AAAA,EACrB;AAAA,EAAK;AAAA,EAAW;AACjB;AACA,IAAI,mBAAmB;AAEvB,gBAAgB,QAAQ,UAAQ;AAC/B,MAAI,QAAQ,KAAK,UAAU,IAAI,QAAQ;AACvC,OAAK,iBAAiB,KAAK,IAAI;AAAA,IAC9B,SAAS,GAAG,kBAAkB,CAAC,IAAI,GAAG,GAAG;AAAA,IACzC,QAAQ,OAAO,KAAK;AAAA,EACtB;AACA,CAAC;AAED,OAAO,OAAO,MAAM;AAAA,EACnB,eAAe;AAAA,IACd,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ,OAAO,GAAG;AAAA,EAClB;AAAA,EACD,UAAU;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,EACR;AAAA,EACD,UAAU;AAAA;AAAA,IAET,SAAS;AAAA,IACT,YAAY;AAAA,EACZ;AAAA,EACD,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AAAA,IACV,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA;AAAA;AAAA,EAGD,YAAY;AAAA;AAAA,EAEZ,eAAe;AAChB,CAAC;"}