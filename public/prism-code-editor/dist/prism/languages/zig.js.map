{"version":3,"file":"zig.js","sources":["../../../src/prism/languages/zig.js"],"sourcesContent":["import { languages } from '../core.js';\r\nimport { boolean, clikePunctuation } from '../utils/patterns.js';\r\nimport { re, replace } from '../utils/shared.js';\r\n\r\nvar keyword = /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|f?or|if|inline|linksection|nakedcc|noalias|nosuspend|null|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/;\r\n\r\nvar IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b';\r\nvar ALIGN = /align\\s*\\((?:[^()]|\\([^)]*\\))*\\)/.source;\r\nvar PREFIX_TYPE_OP = replace(/(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<0>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source, [ALIGN]);\r\nvar SUFFIX_EXPR = replace(/(?:\\bpromise\\b|(?:\\berror\\.)?<0>(?:\\.<0>)*(?!\\s+<0>))/.source, [IDENTIFIER]);\r\nvar TYPE = '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+';\r\n\r\n/*\r\n * A simplified grammar for Zig compile time type literals:\r\n *\r\n * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\r\n *\r\n * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\r\n *\r\n * PREFIX_TYPE_OP = \"?\"\r\n *                | \\b \"promise\" \"->\"\r\n *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\r\n *\r\n * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\r\n *\r\n * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\r\n *\r\n*/\r\n\r\nlanguages.zig = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /\\/\\/[/!].*/,\r\n\t\t\talias: 'doc-comment'\r\n\t\t},\r\n\t\t/\\/\\/.*/\r\n\t],\r\n\t'string': [\r\n\t\t{\r\n\t\t\t// \"string\" and c\"string\"\r\n\t\t\tpattern: /(^|[^\\\\@])c?\"(?:\\\\.|[^\\\\\\n\"])*\"/g,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t{\r\n\t\t\t// multiline strings and c-strings\r\n\t\t\tpattern: /(\\n)([ \\t]+c?\\\\\\\\).*(?:\\n\\2.*)*/g,\r\n\t\t\tlookbehind: true,\r\n\t\t\tgreedy: true\r\n\t\t}\r\n\t],\r\n\t'char': {\r\n\t\t// characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\r\n\t\tpattern: /(^|[^\\\\])'(?:[^\\\\\\n']|[\\ud800-\\udfff]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/g,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true\r\n\t},\r\n\t'builtin': /\\B@(?!\\d)\\w+(?=\\s*\\()/,\r\n\t'label': {\r\n\t\tpattern: /(\\b(?:break|continue)\\s*:\\s*)\\w+|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'class-name': [\r\n\t\t// const Foo = struct {};\r\n\t\t/\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\r\n\t\t{\r\n\t\t\t// const x: i32 = 9;\r\n\t\t\t// var x: Bar;\r\n\t\t\t// fn foo(x: bool, y: f32) void {}\r\n\t\t\tpattern: re(/(:\\s*)<0>(?=\\s*(?:<1>\\s*)?[=;,)])|<0>(?=\\s*(?:<1>\\s*)?\\{)/.source, [TYPE, ALIGN]),\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: 'zig'\r\n\t\t},\r\n\t\t{\r\n\t\t\t// extern fn foo(x: f64) f64; (optional alignment)\r\n\t\t\tpattern: re(/(\\)\\s*)<0>(?=\\s*(?:<1>\\s*)?;)/.source, [TYPE, ALIGN]),\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: 'zig'\r\n\t\t}\r\n\t],\r\n\t'builtin-type': {\r\n\t\tpattern: /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\r\n\t\talias: 'keyword'\r\n\t},\r\n\t'keyword': keyword,\r\n\t'function': /\\b(?!\\d)\\w+(?=\\s*\\()/,\r\n\t'number': /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\r\n\t'boolean': boolean,\r\n\t'operator': /[=-]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[*+-]%|[%&|^!=<>/*+-])=?|[?~]|\\.{3}|\\.[.*?]/,\r\n\t'punctuation': clikePunctuation\r\n};\r\n"],"names":[],"mappings":";;;AAIA,IAAI,UAAU;AAEd,IAAI,aAAa,WAAW,QAAQ,SAAS;AAC7C,IAAI,QAAQ;AACZ,IAAI,iBAAiB,QAAQ,uHAA8G,CAAC,KAAK,CAAC;AAClJ,IAAI,cAAc,QAAQ,+DAAgE,CAAC,UAAU,CAAC;AACtG,IAAI,OAAO,wBAAwB,iBAAiB,WAAW,cAAc;AAmB7E,UAAU,MAAM;AAAA,EACf,WAAW;AAAA,IACV;AAAA,MACC,SAAS;AAAA,MACT,OAAO;AAAA,IACP;AAAA,IACD;AAAA,EACA;AAAA,EACD,UAAU;AAAA,IACT;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,IACR;AAAA,IACD;AAAA;AAAA,MAEC,SAAS;AAAA,MACT,YAAY;AAAA,MACZ,QAAQ;AAAA,IACR;AAAA,EACD;AAAA,EACD,QAAQ;AAAA;AAAA,IAEP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,EACR;AAAA,EACD,WAAW;AAAA,EACX,SAAS;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,EACZ;AAAA,EACD,cAAc;AAAA;AAAA,IAEb;AAAA,IACA;AAAA;AAAA;AAAA;AAAA,MAIC,SAAS,GAAG,mEAAoE,CAAC,MAAM,KAAK,CAAC;AAAA,MAC7F,YAAY;AAAA,MACZ,QAAQ;AAAA,IACR;AAAA,IACD;AAAA;AAAA,MAEC,SAAS,GAAG,qCAAwC,CAAC,MAAM,KAAK,CAAC;AAAA,MACjE,YAAY;AAAA,MACZ,QAAQ;AAAA,IACR;AAAA,EACD;AAAA,EACD,gBAAgB;AAAA,IACf,SAAS;AAAA,IACT,OAAO;AAAA,EACP;AAAA,EACD,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,eAAe;AAChB;"}