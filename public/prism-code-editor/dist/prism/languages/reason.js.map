{"version":3,"file":"reason.js","sources":["../../../src/prism/languages/reason.js"],"sourcesContent":["import { languages } from '../core.js';\r\nimport { extend, insertBefore } from '../utils/language.js';\r\nimport './clike.js';\r\n\r\ninsertBefore(\r\n\tlanguages.reason = extend('clike', {\r\n\t\t'string': {\r\n\t\t\tpattern: /\"(?:\\\\[\\s\\S]|[^\\\\\\n\"])*\"/g,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t// 'class-name' must be matched *after* 'constructor' defined below\r\n\t\t'class-name': /\\b[A-Z]\\w*/,\r\n\t\t'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|f?or|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|switch|[tw]hen|to|try|type|val|virtual|while|with)\\b/,\r\n\t\t'operator': /\\.{3}|:[:=]|[|-]>|=>|==?=?|<=?|>=?|[|^?'#!~`]|[/*+-]\\.?|\\b(?:asr|land|ls[lr]|lx?or|mod)\\b/\r\n\t}),\r\n\t'class-name', {\r\n\t\t'char': {\r\n\t\t\tpattern: /'(?:\\\\x[a-f\\d]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^\\\\\\n'])'/g,\r\n\t\t\tgreedy: true\r\n\t\t},\r\n\t\t// Negative look-ahead prevents from matching things like String.capitalize\r\n\t\t'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\r\n\t\t'label': {\r\n\t\t\tpattern: /\\b[a-z]\\w*(?=::)/,\r\n\t\t\talias: 'symbol'\r\n\t\t}\r\n\t}\r\n);\r\n\r\n// We can't match functions property, so let's not even try.\r\ndelete languages.reason.function;\r\n"],"names":[],"mappings":";;;AAIA;AAAA,EACC,UAAU,SAAS,OAAO,SAAS;AAAA,IAClC,UAAU;AAAA,MACT,SAAS;AAAA,MACT,QAAQ;AAAA,IACR;AAAA;AAAA,IAED,cAAc;AAAA,IACd,WAAW;AAAA,IACX,YAAY;AAAA,EACd,CAAE;AAAA,EACD;AAAA,EAAc;AAAA,IACb,QAAQ;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,IACR;AAAA;AAAA,IAED,eAAe;AAAA,IACf,SAAS;AAAA,MACR,SAAS;AAAA,MACT,OAAO;AAAA,IACP;AAAA,EACD;AACF;AAGA,OAAO,UAAU,OAAO;"}