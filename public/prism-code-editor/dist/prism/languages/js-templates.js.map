{"version":3,"file":"js-templates.js","sources":["../../../src/prism/languages/js-templates.js"],"sourcesContent":["import { languages, tokenize, rest } from '../core.js';\r\nimport { embeddedIn } from '../utils/templating.js';\r\nimport './javascript.js';\r\n\r\nvar js = languages.js;\r\nvar templateString = js['template-string'];\r\n\r\n// see the pattern in prism-javascript.js\r\nvar templateLiteralPattern = templateString.pattern.source;\r\nvar interpolationPattern = templateString.inside.interpolation.pattern;\r\n\r\n/**\r\n * Creates a new pattern to match a template string with a special tag.\r\n *\r\n * This will return `undefined` if there is no grammar with the given language id.\r\n *\r\n * @param {string} language The language id of the embedded language. E.g. `markdown`.\r\n * @param {string} tag The regex pattern to match the tag.\r\n * @returns {object | undefined}\r\n * @example\r\n * createTemplate('css', /\\bcss/.source);\r\n */\r\nvar createTemplate = (language, tag) => ({\r\n\tpattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern, 'g'),\r\n\tlookbehind: true,\r\n\tgreedy: true,\r\n\tinside: {\r\n\t\t'template-punctuation': {\r\n\t\t\tpattern: /^`|`$/,\r\n\t\t\talias: 'string'\r\n\t\t},\r\n\t\t['language-' + language]: {\r\n\t\t\tpattern: /[\\s\\S]+/,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': {\r\n\t\t\t\t\tpattern: interpolationPattern,\r\n\t\t\t\t\tlookbehind: true,\r\n\t\t\t\t\talias: 'language-javascript',\r\n\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t'interpolation-punctuation': {\r\n\t\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\r\n\t\t\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t[rest]: 'js'\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t[tokenize]: embeddedIn(language)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\n\r\njs['template-string'] = [\r\n\t// styled-jsx:\r\n\t//   css`a { color: #25F; }`\r\n\t// styled-components:\r\n\t//   styled.h1`color: red;`\r\n\tcreateTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source),\r\n\r\n\t// html`<p></p>`\r\n\t// div.innerHTML = `<p></p>`\r\n\tcreateTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source),\r\n\r\n\t// svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\r\n\tcreateTemplate('svg', /\\bsvg/.source),\r\n\r\n\t// md`# h1`, markdown`## h2`\r\n\tcreateTemplate('markdown', /\\b(?:markdown|md)/.source),\r\n\r\n\t// gql`...`, graphql`...`, graphql.experimental`...`\r\n\tcreateTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source),\r\n\r\n\t// sql`...`\r\n\tcreateTemplate('sql', /\\bsql/.source),\r\n\r\n\t// vanilla template string\r\n\ttemplateString\r\n];\r\n"],"names":[],"mappings":";;;AAIA,IAAI,KAAK,UAAU;AACnB,IAAI,iBAAiB,GAAG,iBAAiB;AAGzC,IAAI,yBAAyB,eAAe,QAAQ;AACpD,IAAI,uBAAuB,eAAe,OAAO,cAAc;AAa/D,IAAI,iBAAiB,CAAC,UAAU,SAAS;AAAA,EACxC,SAAS,OAAO,SAAS,MAAM,WAAW,wBAAwB,GAAG;AAAA,EACrE,YAAY;AAAA,EACZ,QAAQ;AAAA,EACR,QAAQ;AAAA,IACP,wBAAwB;AAAA,MACvB,SAAS;AAAA,MACT,OAAO;AAAA,IACP;AAAA,IACD,CAAC,cAAc,QAAQ,GAAG;AAAA,MACzB,SAAS;AAAA,MACT,QAAQ;AAAA,QACP,iBAAiB;AAAA,UAChB,SAAS;AAAA,UACT,YAAY;AAAA,UACZ,OAAO;AAAA,UACP,QAAQ;AAAA,YACP,6BAA6B;AAAA,cAC5B,SAAS;AAAA,cACT,OAAO;AAAA,YACP;AAAA,YACD,CAAC,IAAI,GAAG;AAAA,UACR;AAAA,QACD;AAAA,QACD,CAAC,QAAQ,GAAG,WAAW,QAAQ;AAAA,MAC/B;AAAA,IACD;AAAA,EACD;AACF;AAEA,GAAG,iBAAiB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,EAKvB,eAAe,OAAO,qIAAgI;AAAA;AAAA;AAAA,EAItJ,eAAe,QAAQ,6CAA+C;AAAA;AAAA,EAGtE,eAAe,OAAO,QAAc;AAAA;AAAA,EAGpC,eAAe,YAAY,oBAA0B;AAAA;AAAA,EAGrD,eAAe,WAAW,gDAAmD;AAAA;AAAA,EAG7E,eAAe,OAAO,QAAc;AAAA;AAAA,EAGpC;AACD;"}