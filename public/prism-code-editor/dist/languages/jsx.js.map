{"version":3,"file":"jsx.js","sources":["../../src/languages/jsx.ts"],"sourcesContent":["import { CommentTokens } from \"..\"\r\nimport { languageMap } from \"../core\"\r\nimport { Bracket, BracketMatcher } from \"../extensions/matchBrackets\"\r\nimport { Tag, TagMatcher } from \"../extensions/matchTags\"\r\nimport { re } from \"../prism/utils/shared\"\r\nimport { space, braces, spread } from \"../prism/utils/jsx-shared\"\r\nimport { getClosestToken, getLineBefore } from \"../utils\"\r\nimport { autoCloseTags, clikeComment, clikeIndent, testBracketPair } from \"./shared\"\r\n\r\nconst openingTag = re(\r\n\t/(?:^|[^$\\w])<(?:(?!\\d)([^\\s/=><%]+)(?:<0>(?:<0>*(?:[^\\s\"'{=<>/*]+(?:<0>*=<0>*(?!\\s)(?:\"[^\"]*\"|'[^']*'|<1>)?|(?=[\\s/>]))|<2>))+)?<0>*)?>[ \\t]*$/\r\n\t\t.source,\r\n\t[space, braces, spread],\r\n)\r\n\r\nconst closingTag = /^<\\/(?!\\d)[^\\s/=><%]*\\s*>/\r\n\r\nconst inJsxContext = (\r\n\t{ tags, pairs }: TagMatcher,\r\n\t{ brackets, pairs: bracketPairs }: BracketMatcher,\r\n\tposition: number,\r\n) => {\r\n\tfor (let i = tags.length, tag: Tag, min = 0; (tag = tags[--i]); ) {\r\n\t\tif (tag[2] > position && tag[1] < position) min = tag[1]\r\n\t\telse if (\r\n\t\t\t!tag[4] &&\r\n\t\t\ttag[5] &&\r\n\t\t\ttag[1] >= min &&\r\n\t\t\ttag[2] <= position &&\r\n\t\t\t!(tags[pairs[i]!]?.[1] < position)\r\n\t\t) {\r\n\t\t\tfor (let i = brackets.length, bracket: Bracket; (bracket = brackets[--i]); ) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tbracket[1] >= tag[2] &&\r\n\t\t\t\t\tbracket[1] < position &&\r\n\t\t\t\t\tbracket[3] == \"{\" &&\r\n\t\t\t\t\t!(brackets[bracketPairs[i]!]?.[1] < position)\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst jsxComment: CommentTokens = {\r\n\tblock: [\"{/*\", \"*/}\"],\r\n}\r\n\r\nlanguageMap.jsx = languageMap.tsx = {\r\n\tcomments: clikeComment,\r\n\tgetComments(editor, position) {\r\n\t\tconst { matchBrackets, matchTags } = editor.extensions\r\n\t\tconst inJsx =\r\n\t\t\tmatchBrackets && matchTags\r\n\t\t\t\t? inJsxContext(matchTags, matchBrackets, position)\r\n\t\t\t\t: getClosestToken(editor, \".plain-text\", 0, 0, position)\r\n\t\treturn inJsx ? jsxComment : clikeComment\r\n\t},\r\n\tautoIndent: [\r\n\t\t([start], value) =>\r\n\t\t\topeningTag.test(value.slice(0, start)) || clikeIndent.test(getLineBefore(value, start)),\r\n\t\t(selection, value) =>\r\n\t\t\ttestBracketPair(selection, value) ||\r\n\t\t\t(openingTag.test(value.slice(0, selection[0])) && closingTag.test(value.slice(selection[1]))),\r\n\t],\r\n\tautoCloseTags: ([start, end], value, editor) => {\r\n\t\treturn autoCloseTags(editor, start, end, value, openingTag)\r\n\t},\r\n}\r\n"],"names":["i"],"mappings":";;;;;AASA,MAAM,aAAa;AAAA,EAClB;AAAA,EAEA,CAAC,OAAO,QAAQ,MAAM;AACvB;AAEA,MAAM,aAAa;AAEnB,MAAM,eAAe,CACpB,EAAE,MAAM,MACR,GAAA,EAAE,UAAU,OAAO,aAAa,GAChC,aACI;AACK,WAAA,IAAI,KAAK,QAAQ,KAAU,MAAM,GAAI,MAAM,KAAK,EAAE,CAAC,KAAM;AACjE,QAAI,IAAI,CAAC,IAAI,YAAY,IAAI,CAAC,IAAI;AAAU,YAAM,IAAI,CAAC;AAAA,aAEtD,CAAC,IAAI,CAAC,KACN,IAAI,CAAC,KACL,IAAI,CAAC,KAAK,OACV,IAAI,CAAC,KAAK,YACV,EAAE,KAAK,MAAM,CAAC,CAAE,IAAI,CAAC,IAAI,WACxB;AACQA,eAAAA,KAAI,SAAS,QAAQ,SAAmB,UAAU,SAAS,EAAEA,EAAC,KAAM;AAE3E,YAAA,QAAQ,CAAC,KAAK,IAAI,CAAC,KACnB,QAAQ,CAAC,IAAI,YACb,QAAQ,CAAC,KAAK,OACd,EAAE,SAAS,aAAaA,EAAC,CAAE,IAAI,CAAC,IAAI,WACnC;AACD;AAAA,QACD;AAAA,MACD;AACO,aAAA;AAAA,IACR;AAAA,EACD;AACD;AAEA,MAAM,aAA4B;AAAA,EACjC,OAAO,CAAC,OAAO,KAAK;AACrB;AAEA,YAAY,MAAM,YAAY,MAAM;AAAA,EACnC,UAAU;AAAA,EACV,YAAY,QAAQ,UAAU;AAC7B,UAAM,EAAE,eAAe,cAAc,OAAO;AAC5C,UAAM,QACL,iBAAiB,YACd,aAAa,WAAW,eAAe,QAAQ,IAC/C,gBAAgB,QAAQ,eAAe,GAAG,GAAG,QAAQ;AACzD,WAAO,QAAQ,aAAa;AAAA,EAC7B;AAAA,EACA,YAAY;AAAA,IACX,CAAC,CAAC,KAAK,GAAG,UACT,WAAW,KAAK,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,YAAY,KAAK,cAAc,OAAO,KAAK,CAAC;AAAA,IACvF,CAAC,WAAW,UACX,gBAAgB,WAAW,KAAK,KAC/B,WAAW,KAAK,MAAM,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,WAAW,KAAK,MAAM,MAAM,UAAU,CAAC,CAAC,CAAC;AAAA,EAC7F;AAAA,EACA,eAAe,CAAC,CAAC,OAAO,GAAG,GAAG,OAAO,WAAW;AAC/C,WAAO,cAAc,QAAQ,OAAO,KAAK,OAAO,UAAU;AAAA,EAC3D;AACD;"}