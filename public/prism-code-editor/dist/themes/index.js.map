{"version":3,"file":"index.js","sources":["../../src/themes/index.ts"],"sourcesContent":["const themes = import.meta.glob(\"./*.css\", { query: \"?inline\" })\r\n\r\n/**\r\n * Function that allows overriding the default themes or registering new themes to be\r\n * used by the setups or web components.\r\n * @param name Name of the theme.\r\n * @param loader Function returning a promise that resolves with the CSS for the theme.\r\n */\r\nconst registerTheme = (name: string, loader: () => Promise<{ default: string }>) => {\r\n\tthemes[`./${name}.css`] = loader\r\n}\r\n\r\n/**\r\n * Asynchronously loads the theme with the specified name.\r\n * The promise returned resolves with the CSS string for the theme.\r\n */\r\nconst loadTheme = async (name: string) =>\r\n\t(<undefined | { default: string }>await themes[`./${name}.css`]?.())?.default\r\n\r\nexport { loadTheme, registerTheme }\r\n"],"names":[],"mappings":"AAAA,MAAM;AAQA,MAAA,gBAAgB,CAAC,MAAc,WAA+C;AAC5E,SAAA,KAAK,IAAI,MAAM,IAAI;AAC3B;AAMM,MAAA,YAAY,OAAO,UACU,MAAM,OAAO,KAAK,IAAI,MAAM,QAAQ;"}